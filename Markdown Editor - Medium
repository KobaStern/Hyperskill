formatters = ["plain", "bold", "italic", "header", "link", "inline-code", "ordered-list", "unordered-list", "new-line"]
markdown_list = []

def help():
    print("Available formatters:", ' '.join(formatters))
    print("Special commands: !help !done")

def error():
    print("Unknown formatting type or command")

def formatting_list():
    while True:
        try:
            rows = int(input('Number of rows: '))
            if rows > 0:
                rows_list = []
                for i in range(rows):
                    n = input(f"Row #{i + 1}: ")
                    rows_list.append(n)

                if question == "ordered-list":
                    result = "\n".join([f"{i + 1}. {item}" for i, item in enumerate(rows_list)]) + "\n"
                elif question == "unordered-list":
                    result = "\n".join([f"* {item}" for item in rows_list]) + "\n"

                markdown_list.append(result)
                break  # Exit the loop after successfully appending the list
            else:
                print('The number of rows should be greater than zero')
        except ValueError:
            print('Please enter a valid number')

def header():
    while True:
        try:
            level = int(input("Level: "))
            if 1 <= level <= 6:
                text = input("Text: ")
                result = f"{'#' * level} {text}\n"
                if markdown_list:  # Check if markdown_list is not empty
                    result = "\n" + result  # Add a newline before the header if it's not the first entry
                markdown_list.append(result)
                break
            else:
                print('The level should be within the range of 1 to 6')
        except ValueError:
            print('Please enter a valid number')

def bold():
    text = input("Text: ")
    finished = f"**{text}**"
    markdown_list.append(finished)

def italic():
    text = input("Text: ")
    finished = f"*{text}*"
    markdown_list.append(finished)

def plain():
    text = input("Text: ")
    markdown_list.append(text)

def inline_code():
    text = input("Text: ")
    finished = f"`{text}`"
    markdown_list.append(finished)

def new_line():
    markdown_list.append("\n")

def link():
    label = input("Label: ")
    url = input("URL: ")
    result = f"[{label}]({url})"
    markdown_list.append(result)

def saved():
    print(''.join(markdown_list))

def done():
    with open("output.md", "w") as file:
        file.write(''.join(markdown_list))

while True:
    question = input("Choose a formatter: ")
    if question == "!help":
        help()
    elif question == "!done":
        done()
        break
    elif question not in formatters:
        error()
    else:
        if question == "plain":
            plain()
        elif question == "bold":
            bold()
        elif question == "italic":
            italic()
        elif question == "header":
            header()
        elif question == "link":
            link()
        elif question == "inline-code":
            inline_code()
        elif question == "new-line":
            new_line()
        elif question in ["ordered-list", "unordered-list"]:
            formatting_list()
        saved()
